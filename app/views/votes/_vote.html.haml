-if votable.persisted?
 .vote
  %p Votes 
  .rating
   %p
    Rating:
    =votable.rating
    / user:
    / -unless current_user.nil?
    /  =current_user.id 
    / votable:
    / =votable.class.name+ " "+votable.id.to_s
    / previous_vote:
    / -unless votable.previous_vote(current_user).nil?  
    /  =votable.previous_vote(current_user).id 

 -if user_signed_in? && current_user.id != votable.user_id
  -previous_vote = votable.previous_vote(current_user)
  -if previous_vote.nil?  
   .vote_links{id: "vote-#{votable.class.name.downcase}-#{votable.id}"}
    =link_to raw(" <span class='glyphicon glyphicon-thumbs-up'></span>"), polymorphic_path([votable, Vote.new], vote:{score:1}), method: :post, remote: true, class: 'score btn btn-success',role:'button'
     
    =link_to raw(" <span class='glyphicon glyphicon-thumbs-down'></span>"), polymorphic_path([votable, Vote.new], vote:{score:-1} ), method: :post, remote: true,class: 'unscore btn btn-warning',role:'button'
  -else 
   .vote_links{id: "vote-#{votable.class.name.downcase}-#{votable.id}"}
    =link_to "Revote", vote_path(previous_vote), method: :delete, remote: true, class: 'destroy_vote btn btn-default',role:'button'
 -elsif user_signed_in? && current_user.id == votable.user_id  
  No votes for your own stuff!
 -else 	 
  %p 
   =link_to "Sign in", new_user_session_path
   and  vote!


